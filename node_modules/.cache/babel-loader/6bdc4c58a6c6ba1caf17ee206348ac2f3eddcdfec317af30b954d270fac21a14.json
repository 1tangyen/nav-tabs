{"ast":null,"code":"var _jsxFileName = \"/Users/yent/Documents/JSpractice/report-generation-tool/src/pages/MainForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport TabbedComponent from \"../components/TabbedComponent\";\nimport Summary from \"../components/Summary\";\nimport StartForm from \"../components/StartForm\";\nimport ProductForm from \"../components/ProductForm\";\nimport SourceDataForm from \"../components/SourceDataForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainForm = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"Step1\");\n  const handleNavigation = action => {\n    const tabs = [\"Step1\", \"Step2\", \"Step3\", \"Summary\", \"Complete\"];\n    const currentIndex = tabs.indexOf(activeTab);\n    if (action === \"next\" && currentIndex < tabs.length - 1) {\n      setActiveTab(tabs[currentIndex + 1]);\n    } else if (action === \"prev\" && currentIndex > 0) {\n      setActiveTab(tabs[currentIndex - 1]);\n    }\n  };\n  const progressValues = {\n    Step1: 0,\n    Step2: 25,\n    Step3: 50,\n    Summary: 75,\n    Complete: 100\n  };\n  const progress = progressValues[activeTab];\n  const renderFormContent = () => {\n    switch (activeTab) {\n      case \"Step1\":\n        return /*#__PURE__*/_jsxDEV(StartForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 16\n        }, this);\n      case \"Step2\":\n        return /*#__PURE__*/_jsxDEV(ProductForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 16\n        }, this);\n      case \"Step3\":\n        return /*#__PURE__*/_jsxDEV(SourceDataForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }, this);\n      case \"Summary\":\n        return /*#__PURE__*/_jsxDEV(Summary, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this);\n      // Add a case for 'Complete' if you have a Complete component\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(TabbedComponent, {\n      activeKey: activeTab,\n      onSelect: setActiveTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar-container\",\n      children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: progress,\n        label: `${progress}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), renderFormContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(MainForm, \"IEz0G4QU0bqb6AZjyENG3T8rVqA=\");\n_c = MainForm;\nexport default MainForm;\nvar _c;\n$RefreshReg$(_c, \"MainForm\");","map":{"version":3,"names":["React","useState","ProgressBar","TabbedComponent","Summary","StartForm","ProductForm","SourceDataForm","jsxDEV","_jsxDEV","MainForm","_s","activeTab","setActiveTab","handleNavigation","action","tabs","currentIndex","indexOf","length","progressValues","Step1","Step2","Step3","Complete","progress","renderFormContent","fileName","_jsxFileName","lineNumber","columnNumber","className","children","activeKey","onSelect","now","label","_c","$RefreshReg$"],"sources":["/Users/yent/Documents/JSpractice/report-generation-tool/src/pages/MainForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport TabbedComponent from \"../components/TabbedComponent\";\nimport Summary from \"../components/Summary\";\nimport StartForm from \"../components/StartForm\";\nimport ProductForm from \"../components/ProductForm\";\nimport SourceDataForm from \"../components/SourceDataForm\";\n\nconst MainForm = () => {\n  const [activeTab, setActiveTab] = useState(\"Step1\");\n\n  const handleNavigation = (action) => {\n    const tabs = [\"Step1\", \"Step2\", \"Step3\", \"Summary\", \"Complete\"];\n    const currentIndex = tabs.indexOf(activeTab);\n    if (action === \"next\" && currentIndex < tabs.length - 1) {\n      setActiveTab(tabs[currentIndex + 1]);\n    } else if (action === \"prev\" && currentIndex > 0) {\n      setActiveTab(tabs[currentIndex - 1]);\n    }\n  };\n\n  const progressValues = {\n    Step1: 0,\n    Step2: 25,\n    Step3: 50,\n    Summary: 75,\n    Complete: 100,\n  };\n  const progress = progressValues[activeTab];\n\n  const renderFormContent = () => {\n    switch (activeTab) {\n      case \"Step1\":\n        return <StartForm />;\n      case \"Step2\":\n        return <ProductForm />;\n      case \"Step3\":\n        return <SourceDataForm />;\n      case \"Summary\":\n        return <Summary />;\n      // Add a case for 'Complete' if you have a Complete component\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"main-form-container\">\n      <TabbedComponent activeKey={activeTab} onSelect={setActiveTab} />\n      <div className=\"progress-bar-container\">\n        <ProgressBar now={progress} label={`${progress}%`} />\n      </div>\n      {renderFormContent()}\n    </div>\n  );\n};\n\nexport default MainForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}